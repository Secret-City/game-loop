const SHOW_VENTS = true; // Set to false to treat vents as walls
const SHOW_GOAL = true;  // Set to false to treat the goal as empty space
const SHOW_DOORS = true; // Set to false to render doors as walls

const WALL = '#';
const EMPTY = '.';
const START = 'S';
const DOOR = 'D';
const VENT = 'V'; // Re-introducing VENTS
const GOAL = 'G';

// Expanded grid: 26 rows (11+15), 23 columns (15+8)
// Conceptual Room Codes:
// R01: Start Room
// R02, R03, R04, R05, R06, R07, R08: Various interconnected rooms
// H01, H02, H03, H04, H05: Hallways
// G01: Goal Room
const initialGrid = [
    //0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22
    [WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL], // 0
    [WALL, START, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, WALL, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, WALL, EMPTY, EMPTY, VENT, EMPTY, EMPTY, DOOR, EMPTY, WALL], // 1 (R01, H01)
    [WALL, EMPTY, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, EMPTY, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL], // 2
    [WALL, EMPTY, DOOR, EMPTY, EMPTY, DOOR, EMPTY, DOOR, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, VENT, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, WALL, EMPTY, WALL], // 3 (R02, H02)
    [WALL, EMPTY, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL], // 4
    [WALL, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, WALL, WALL, WALL, DOOR, EMPTY, EMPTY, WALL, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, WALL], // 5 (R03, G01)
    [WALL, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, VENT, WALL], // 6
    [WALL, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, DOOR, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, WALL], // 7 (R04, H03)
    [WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, DOOR, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL], // 8
    [WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL], // 9 (H04)
    [WALL, WALL, DOOR, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL], // 10
    [WALL, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, VENT, EMPTY, WALL, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, WALL, EMPTY, EMPTY, VENT, EMPTY, EMPTY, DOOR, EMPTY, WALL], // 11 (R05)
    [WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL], // 12
    [WALL, VENT, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, WALL, EMPTY, VENT, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, WALL, EMPTY, WALL], // 13 (R06)
    [WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL], // 14
    [WALL, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, WALL, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, WALL, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, WALL], // 15 (R07, H05)
    [WALL, EMPTY, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, VENT, WALL], // 16
    [WALL, EMPTY, DOOR, EMPTY, EMPTY, VENT, EMPTY, DOOR, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, DOOR, EMPTY, WALL], // 17 (R08)
    [WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL], // 18
    [WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, EMPTY, WALL], // 19
    [WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, WALL, WALL], // 20
    [WALL, EMPTY, EMPTY, VENT, EMPTY, EMPTY, DOOR, EMPTY, WALL, EMPTY, EMPTY, VENT, EMPTY, EMPTY, WALL, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, VENT, EMPTY, WALL], // 21
    [WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL], // 22
    [WALL, DOOR, EMPTY, EMPTY, EMPTY, VENT, EMPTY, EMPTY, DOOR, EMPTY, EMPTY, EMPTY, WALL, EMPTY, DOOR, EMPTY, VENT, EMPTY, EMPTY, EMPTY, WALL, EMPTY, WALL], // 23
    [WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, EMPTY, WALL, GOAL, GOAL, WALL, WALL, WALL, WALL, EMPTY, WALL, EMPTY, WALL], // 24
    [WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, GOAL, GOAL, WALL, WALL, WALL, WALL, WALL, WALL, WALL, WALL], // 25
];

export { initialGrid, START, DOOR, VENT, GOAL, WALL, EMPTY, SHOW_DOORS, SHOW_VENTS, SHOW_GOAL };